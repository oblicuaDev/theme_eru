{# /** * @file * Template for a Node. */ #} {% set classes = [ 'node',
node.isPromoted() ? 'node--promoted', node.isSticky() ? 'node--sticky', not
node.isPublished() ? 'node--unpublished', node.bundle|clean_class,
node.bundle|clean_class ~ '--' ~ view_mode|clean_class, 'project' ] %} {#
{{ kint(content | keys) }} #}
<article {{ attributes.addClass(classes) }}>
  {% block content %}
  <div class="container container-project-new mt-5">
    <ul class="nav nav-pills nav-fill oblicua-nav-pill" id="myTab" role="tablist">
      <li class="nav-item">
        <a aria-controls="description" aria-selected="true" class="nav-link active" data-toggle="tab"
          href="#description" id="description-tab" role="tab">Descripción</a>
      </li>
      <li class="nav-item">
        <a aria-controls="benefits" aria-selected="false" class="nav-link" data-toggle="tab" href="#benefits"
          id="benefits-tab" role="tab">Beneficios</a>
      </li>
      <li class="nav-item">
        <a aria-controls="scope" aria-selected="false" class="nav-link" data-toggle="tab" href="#scope" id="scope-tab"
          role="tab">Alcance</a>
      </li>
      <li class="nav-item">
        <a aria-controls="benefits" aria-selected="false" class="nav-link" data-toggle="tab" href="#status"
          id="status-tab" role="tab">Estado e Inversión</a>
      </li>
      <li class="nav-item">
        <a aria-controls="multimedia" aria-selected="false" class="nav-link" data-toggle="tab" href="#multimedia"
          id="multimedia-tab" role="tab">Multimedia</a>
      </li>
    </ul>
    <div class="tab-content" id="myTabContent">
      <div aria-labelledby="description-tab" class="tab-pane fade show active project-content" id="description"
        role="tabpanel">
        {{ content.body }}
        {{content.field_location}}
        {{content.field_status_of_project}}
        {{content.field_visor_de_proyectos}}
      </div>
      <div aria-labelledby="benefits-tab" class="tab-pane fade project-content" id="benefits" role="tabpanel">
        {{content.field_benefits_of_project}}
        {{content.field_imagen_bebeficios}}
      </div>
      <div aria-labelledby="scope-tab" class="tab-pane fade project-content row" id="scope" role="tabpanel">
        {{content.field_scope_of_project}}
        {{content.field_contratos}}
      </div>
      <div aria-labelledby="status-tab" class="tab-pane fade project-content" id="status" role="tabpanel">
        {{content.field_fecha_de_inicio}}
        {{content.field_fecha_de_finalizacion}}
        <div>
          <canvas id="myChart"></canvas>
          <canvas id="myChart2"></canvas>
        </div>
        {{content.field_valor_ejecutado_del_proyec}}
        {{content.field_valor_total_del_proyecto}}
      </div>
      <div aria-labelledby="multimedia-tab" class="tab-pane fade row project-content" id="multimedia" role="tabpanel">
        {{content.field_gallery}}
      </div>
    </div>
  </div>
  {% endblock %}
</article>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const ctx = document.getElementById('myChart');
  const ctx2 = document.getElementById('myChart2');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      datasets: [{
        label: '# of Votes',
        data: [12, 19, 3, 5, 2, 3],
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });

  const DATA_COUNT = 12;
  const NUMBER_CFG = { count: DATA_COUNT, min: 0, max: 100 };
  const data = {
    labels: [['June', '2015'], 'July', 'August', 'September', 'October', 'November', 'December', ['January', '2016'], 'February', 'March', 'April', 'May'],
    datasets: [
      {
        label: 'Dataset 1',
        data: Utils.numbers(NUMBER_CFG),
        fill: false,
        borderColor: Utils.CHART_COLORS.red,
        backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),
      },
      {
        label: 'Dataset 2',
        data: Utils.numbers(NUMBER_CFG),
        fill: false,
        borderColor: Utils.CHART_COLORS.blue,
        backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),
      }
    ]
  };
  const config = {
    type: 'line',
    data: data,
    options: {
      responsive: true,
      plugins: {
        title: {
          display: true,
          text: 'Chart with Tick Configuration'
        }
      },
      scales: {
        x: {
          ticks: {
            // For a category axis, the val is the index so the lookup via getLabelForValue is needed
            callback: function (val, index) {
              // Hide every 2nd tick label
              return index % 2 === 0 ? this.getLabelForValue(val) : '';
            },
            color: 'red',
          }
        }
      }
    },
  };
  new Chart(ctx2, config);
</script>